---
export interface Props {
  title: string;
  lang: string;
  description: string;
  keywords: string;
  bodyClassName?: string;
}

const { title, lang, description, keywords, bodyClassName } = Astro.props;
---

<!doctype html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={"HID-Prology - " + description} />
    <meta name="author" content="Iván Eli Ramírez Herrera" />
    <meta name="keywords" content={keywords} />

    <title>{title}</title>

    <link rel="icon" type="image/svg+xml" href=`${import.meta.env.BASE_URL}/favicon.svg` />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500;600;700&display=swap" />
  </head>

  <body class=`overflow-hidden 
               overflow-y-auto 
               bg-body
               ${bodyClassName! ? bodyClassName : "" }`>
    
    <slot name="header" />

    <main>
      <slot />
    </main>

    <slot name="footer" />

    <div id="cursor"></div>
  </body>

  <script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]",
    ) as HTMLButtonElement;

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            }
          }
        }
      });
    }
  </script>

  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]",
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]",
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", (e) => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
          navbar.style.height = `${navbar.scrollHeight}px`;
        } else {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        }
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });
    }
  </script>
</html>

<style is:global>
  :root {
    --color-bg: rgb(255 255 255);
    --color-box: rgb(191 191 191);
    --color-border: rgb(255 255 255);

    --box-border: rgb(229 231 235);
    --box-sd: rgb(226 232 240 / 0.5);

    --dropdw-hover-bg: rgb(226 232 240 / 0.5);
    --dropdw-hover-txt: rgb(23 37 84);

    --heading-1: rgb(23 37 84);
    --heading-2: rgb(31 41 55);
    --heading-3: rgb(55 65 81);
  }

  .dark {
    --color-bg: rgb(3 7 18);
    --color-box: rgb(17 24 39);

    --box-border: rgb(243 244 246 / 0.1);
    --box-sd: transparent;

    --dropdw-hover-bg: rgb(226 232 240 / 0.5);
    --dropdw-hover-txt: rgb(255 255 255);

    --heading-1: rgb(255 255 255);
    --heading-2: rgb(243 244 246);
    --heading-3: rgb(209 213 219);
  }

  html {
    scroll-behavior: smooth;
  }
  body {
    font-family: "Rubik", sans-serif;
  }

  html,
  body {
    height: 100%;
    min-height: 100%;
  }

  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }
  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }
</style>

<!-- Cursor Style -->
<script>
  var cursor = document.getElementById("cursor");

  document.onmousemove = function (e) {
    if (cursor !== null) {
      cursor.style.left = e.pageX - cursor.offsetWidth / 2 + "px";
      cursor.style.top = e.pageY - cursor.offsetHeight / 2 + "px";
      cursor.style.display = "block";
    }
  };
</script>

<style>
  #cursor {
    display: none;
  }
  @media (min-width: 1024px) {
    #cursor {
      --cursor-radius: 25;
      --bg-cursor-opacity: 1;
      border-radius: 9999px;
      height: calc(2px * var(--cursor-radius));
      width: calc(2px * var(--cursor-radius));
      background-color: rgb(79 70 229);
      opacity: 0.4;
      filter: blur(7px);
      position: absolute;
      display: block;
      transition-duration: 0.3s;
      transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
      z-index: -1;
    }
  }
</style>
